version: '3.4'

services:
  api1:
    image: ${DOCKER_REGISTRY-}webapp
    build:
      context: .
      dockerfile: WebApp/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:5000
    ports:
      - '5000:5000'
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
   # depends_on:
      - db
    networks:
      - mynetwork
    
  api2:
    image: ${DOCKER_REGISTRY-}webapp
    build:
      context: .
      dockerfile: WebApp/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:5001
    ports:
      - '5001:5001'
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
   # depends_on:
      - db
    networks:
      - mynetwork
      

  db:
    image: postgres
    container_name: db_container
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
    volumes:
      - local_pgdata:/var/lib/postgresql/data
    networks:
      - mynetwork


  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8889:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: 79ostap@ukr.net
      PGADMIN_DEFAULT_PASSWORD: pass
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - mynetwork

  nginx:
    image: nginx:alpine
    hostname: 'nginx'
    volumes:
    #C:\Users\Comp_Zona\Desktop\WebDev3\WebApp\WebApp\nginx\ssl\localhost.crt
      - ./WebApp/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./WebApp/nginx/proxy.conf:/etc/nginx/proxy.conf:ro
      - ./WebApp/nginx/ssl/localhost.crt:/etc/ssl/certs/localhost.crt:ro
      - ./WebApp/nginx/ssl/localhost.key:/etc/ssl/certs/localhost.key:ro
      - ./WebApp/nginx/logs/:/var/log/nginx/
    ports:
      - '80:80'
      - '443:443'
    #depends_on:
      - api1
      - api2
    restart: always
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  local_pgdata:
  pgadmin-data:
